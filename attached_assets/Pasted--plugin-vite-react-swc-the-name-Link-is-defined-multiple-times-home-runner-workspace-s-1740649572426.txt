[plugin:vite:react-swc] × the name `Link` is defined multiple times
    ╭─[/home/runner/workspace/src/components/sidebar/SidebarNavigation.tsx:2:1]
  1 │ import React from "react";
  2 │ import { Link, useLocation } from "react-router-dom";
    ·          ──┬─
    ·            ╰── previous definition of `Link` here
  3 │ import { LucideIcon } from "lucide-react";
  4 │ 
  5 │ interface MenuItem {
  6 │   icon: LucideIcon;
  7 │   text: string;
  8 │   path: string;
  9 │ }
 10 │ 
 11 │ interface SidebarNavigationProps {
 12 │   menuItems: MenuItem[];
 13 │ }
 14 │ 
 15 │ const SidebarNavigation = ({ menuItems }: SidebarNavigationProps) => {
 16 │   const location = useLocation();
 17 │   const isActive = (path: string) => location.pathname === path;
 18 │ 
 19 │   return (
 20 │     <div className="px-4">
 21 │       <div className="space-y-2">
 22 │         {menuItems.map((item) => (
 23 │           <Link
 24 │             key={item.text}
 25 │             to={item.path}
 26 │             className={`flex items-center gap-3 rounded-lg px-3 py-2 transition-colors ${
 27 │               isActive(item.path)
 28 │                 ? "bg-blue-600 text-white"
 29 │                 : "text-gray-300 hover:bg-sidebar-hover"
 30 │             }`}
 31 │           >
 32 │             <item.icon className="h-5 w-5" />
 33 │             <span>{item.text}</span>
 34 │           </Link>
 35 │         ))}
 36 │       </div>
 37 │     </div>
 38 │   );
 39 │ };
 40 │ 
 41 │ export default SidebarNavigation;
 42 │ import { Link, useLocation } from "react-router-dom";
    ·          ──┬─
    ·            ╰── `Link` redefined here
 43 │ import {
 44 │   LayoutDashboard,
 45 │   FileText,
    ╰────
  × the name `useLocation` is defined multiple times
    ╭─[/home/runner/workspace/src/components/sidebar/SidebarNavigation.tsx:2:1]
  1 │ import React from "react";
  2 │ import { Link, useLocation } from "react-router-dom";
    ·                ─────┬─────
    ·                     ╰── previous definition of `useLocation` here
  3 │ import { LucideIcon } from "lucide-react";
  4 │ 
  5 │ interface MenuItem {
  6 │   icon: LucideIcon;
  7 │   text: string;
  8 │   path: string;
  9 │ }
 10 │ 
 11 │ interface SidebarNavigationProps {
 12 │   menuItems: MenuItem[];
 13 │ }
 14 │ 
 15 │ const SidebarNavigation = ({ menuItems }: SidebarNavigationProps) => {
 16 │   const location = useLocation();
 17 │   const isActive = (path: string) => location.pathname === path;
 18 │ 
 19 │   return (
 20 │     <div className="px-4">
 21 │       <div className="space-y-2">
 22 │         {menuItems.map((item) => (
 23 │           <Link
 24 │             key={item.text}
 25 │             to={item.path}
 26 │             className={`flex items-center gap-3 rounded-lg px-3 py-2 transition-colors ${
 27 │               isActive(item.path)
 28 │                 ? "bg-blue-600 text-white"
 29 │                 : "text-gray-300 hover:bg-sidebar-hover"
 30 │             }`}
 31 │           >
 32 │             <item.icon className="h-5 w-5" />
 33 │             <span>{item.text}</span>
 34 │           </Link>
 35 │         ))}
 36 │       </div>
 37 │     </div>
 38 │   );
 39 │ };
 40 │ 
 41 │ export default SidebarNavigation;
 42 │ import { Link, useLocation } from "react-router-dom";
    ·                ─────┬─────
    ·                     ╰── `useLocation` redefined here
 43 │ import {
 44 │   LayoutDashboard,
 45 │   FileText,
    ╰────
  × the name `SidebarNavigation` is defined multiple times
    ╭─[/home/runner/workspace/src/components/sidebar/SidebarNavigation.tsx:15:1]
 12 │   menuItems: MenuItem[];
 13 │ }
 14 │ 
 15 │ const SidebarNavigation = ({ menuItems }: SidebarNavigationProps) => {
    ·       ────────┬────────
    ·               ╰── previous definition of `SidebarNavigation` here
 16 │   const location = useLocation();
 17 │   const isActive = (path: string) => location.pathname === path;
 18 │ 
 19 │   return (
 20 │     <div className="px-4">
 21 │       <div className="space-y-2">
 22 │         {menuItems.map((item) => (
 23 │           <Link
 24 │             key={item.text}
 25 │             to={item.path}
 26 │             className={`flex items-center gap-3 rounded-lg px-3 py-2 transition-colors ${
 27 │               isActive(item.path)
 28 │                 ? "bg-blue-600 text-white"
 29 │                 : "text-gray-300 hover:bg-sidebar-hover"
 30 │             }`}
 31 │           >
 32 │             <item.icon className="h-5 w-5" />
 33 │             <span>{item.text}</span>
 34 │           </Link>
 35 │         ))}
 36 │       </div>
 37 │     </div>
 38 │   );
 39 │ };
 40 │ 
 41 │ export default SidebarNavigation;
 42 │ import { Link, useLocation } from "react-router-dom";
 43 │ import {
 44 │   LayoutDashboard,
 45 │   FileText,
 46 │   Globe,
 47 │   Calendar,
 48 │   ShieldCheck,
 49 │   Bot,
 50 │   Bell,
 51 │   Calculator,
 52 │   ChartBar,
 53 │ } from "lucide-react";
 54 │ 
 55 │ interface NavItem {
 56 │   icon: React.ReactNode;
 57 │   label: string;
 58 │   path: string;
 59 │ }
 60 │ 
 61 │ const SidebarNavigation = () => {
    ·       ────────┬────────
    ·               ╰── `SidebarNavigation` redefined here
 62 │   const location = useLocation();
 63 │ 
 64 │   const navItems: NavItem[] = [
    ╰────
  × the name `default` is exported multiple times
     ╭─[/home/runner/workspace/src/components/sidebar/SidebarNavigation.tsx:41:1]
  38 │   );
  39 │ };
  40 │ 
  41 │ export default SidebarNavigation;
     · ────────────────┬────────────────
     ·                 ╰── previous exported here
  42 │ import { Link, useLocation } from "react-router-dom";
  43 │ import {
  44 │   LayoutDashboard,
  45 │   FileText,
  46 │   Globe,
  47 │   Calendar,
  48 │   ShieldCheck,
  49 │   Bot,
  50 │   Bell,
  51 │   Calculator,
  52 │   ChartBar,
  53 │ } from "lucide-react";
  54 │ 
  55 │ interface NavItem {
  56 │   icon: React.ReactNode;
  57 │   label: string;
  58 │   path: string;
  59 │ }
  60 │ 
  61 │ const SidebarNavigation = () => {
  62 │   const location = useLocation();
  63 │ 
  64 │   const navItems: NavItem[] = [
  65 │     {
  66 │       icon: <LayoutDashboard className="h-5 w-5" />,
  67 │       label: "Dashboard",
  68 │       path: "/dashboard",
  69 │     },
  70 │     {
  71 │       icon: <Calculator className="h-5 w-5" />,
  72 │       label: "Tax Web App",
  73 │       path: "/tax-web-app",
  74 │     },
  75 │     {
  76 │       icon: <ChartBar className="h-5 w-5" />,
  77 │       label: "Audit Reporting",
  78 │       path: "/audit-reporting",
  79 │     },
  80 │     {
  81 │       icon: <FileText className="h-5 w-5" />,
  82 │       label: "Transfer Pricing",
  83 │       path: "/transfer-pricing",
  84 │     },
  85 │     {
  86 │       icon: <Globe className="h-5 w-5" />,
  87 │       label: "Global Reporting",
  88 │       path: "/global-reporting",
  89 │     },
  90 │     {
  91 │       icon: <Calendar className="h-5 w-5" />,
  92 │       label: "Calendar",
  93 │       path: "/calendar",
  94 │     },
  95 │     {
  96 │       icon: <ShieldCheck className="h-5 w-5" />,
  97 │       label: "Compliance Tracker",
  98 │       path: "/compliance",
  99 │     },
 100 │     {
 101 │       icon: <Bot className="h-5 w-5" />,
 102 │       label: "AI Assistant",
 103 │       path: "/ai-assistant",
 104 │     },
 105 │     {
 106 │       icon: <Bell className="h-5 w-5" />,
 107 │       label: "Notifications",
 108 │       path: "/notifications",
 109 │     },
 110 │   ];
 111 │ 
 112 │   return (
 113 │     <nav className="mt-6 space-y-1 px-2">
 114 │       {navItems.map((item) => (
 115 │         <Link
 116 │           key={item.path}
 117 │           to={item.path}
 118 │           className={`flex items-center rounded-md px-3 py-2 text-sm font-medium ${
 119 │             location.pathname === item.path
 120 │               ? "bg-gray-200 text-gray-900"
 121 │               : "text-gray-700 hover:bg-gray-100 hover:text-gray-900"
 122 │           }`}
 123 │         >
 124 │           {item.icon}
 125 │           <span className="ml-3">{item.label}</span>
 126 │         </Link>
 127 │       ))}
 128 │     </nav>
 129 │   );
 130 │ };
 131 │ 
 132 │ export default SidebarNavigation;
     · ────────────────┬────────────────
     ·                 ╰── exported more than once
     ╰────

Advice:   ☞ Exported identifiers must be unique
/home/runner/workspace/src/components/sidebar/SidebarNavigation.tsx:2:1
13 |  }
14 |  
15 |  const SidebarNavigation = ({ menuItems }: SidebarNavigationProps) => {
   |         ^
16 |    const location = useLocation();
17 |    const isActive = (path: string) => location.pathname === path;
Click outside, press Esc key, or fix the code to dismiss.
You can also disable this overlay by setting server.hmr.overlay to false in vite.config.ts.